
# Definition of the shape of the elements 
---
sdfData:
  Attribute:
    type: string
    sdfChoice:
      Integer: Integer
      Float: Float
      String: String
      Boolean: Boolean
      UUID: UUID
      EnumType: EnumType
  Relation:
    type: object
    properties:
      target:
        sdfRef: "#/sdfData/RelationTarget"
      relationType: 
        sdfRef: "#/sdfData/RelationType"
      relatedType:
        sdfRef: "#/sdfData/ObjectType"
      relationSubType:
        sdfRef: "#/sdfData/RelationSubType"
      minItems:
        type: integer
        minimum: 0
      maxItems:
        type: integer
        minimum: 1
  RelationTarget:
    type: string
    format: json-pointer
  RelationType:
    type: string
    sdfChoice:
      has: has
      of: of
      to: to
      from: from
      with: with
  RelationSubType:
    type: string
    sdfChoice:
      primary: primary
      secondary: secondary
      characteristic: characteristic
  ObjectType:
    type: string
    sdfChoice:
      Equipment: Equipment
      System: System
      Component: Component
      Media: Media
      Connection: Connection

# Meta definition for construction of Objects using a syntax modeled after generic variables
---
sdfObject:
  <Object>: 
    sdfProperty:
      <Attribute>:
        sdfRef: "#/sdfData/Attribute"
      <Relation>:
        sdfRef: "#/sdfData/Relation"

# A Definition of an Object Type "Component", conforming to the meta definition 
---
Object:
  Component:
    Attribute:
      name: String
      description: String
    Relation:
      hasMedia:
        relationType: has
        relatedType: Media
        minItems: 1
      hasPrimaryMedia:
        relationType: has
        relatedType: Media
        relationSubType: Primary
        minItems: 1
        maxItems: 1
      ofEquipment:
        relationType: of
        relatedType: Equipment
        minItems: 1
        maxItems: 1

# Equivalent SDF syntax       
---
sdfObject:
  Component:
    sdfProperty:
      name:        
        sdfRef: "#/sdfData/Attribute"
        sdfChoice: { string: String }
      description: 
        sdfRef: "#/sdfData/Attribute"
        sdfChoice: { string: String }
      hasMedia:
        sdfRef: "#/sdfData/Relation"
        properties:
          relationType: has
          relatedType: Media
          minItems: 1
        hasPrimaryMedia:
        sdfRef: "#/sdfData/Relation"
        properties:
          relationType: has
          relatedType: Media
          relationSubType: Primary
          minItems: 1
          maxItems: 1
      ofEquipment:
        sdfRef: "#/sdfData/Relation"
        properties:
          relationType: of
          relatedType: Equipment
          minItems: 1
          maxItems: 1
       

# An object instance definition conforming to the Component Object Type definition
# The Class association of the terms is already known, so the Class names are elided 
# from the definition format
---
Component: 
  SpinnerMotor:
    name: Spinner Motor
    description: Motor that causes the mirrored sphere to rotate
    hasMedia:
      - "#/Media/SpinnerMotorElectricalPower"
      - "#/Media/SpinnerMotorTorque"
    hasPrimaryMedia:
      - "#/Media/SpinnerMotorTorque"
    ofEquipment:
      - "#/Equipment/DiscoBall"
  MotorController:
    name: Motor Controller
    description: Modulates the electrical power to control the rotation speed of the motor
    hasMedia:
      - "#/Media/ElectricalPowerToSpinnerMotor"
      - "#/Media/ControlSignalToMotorController"
    hasPrimaryMedia:
      - "#/Media/ElectricalPowerToSpinnerMotor"
    ofEquipment:
      - "#/Equipment/DiscoBall"


# JSON Schema for definitions of Object Types
{
  "title": "Custom Vocabulary Example",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "Object": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "Attribute": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/AttributeType"
            }
          },
          "Relation": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "target": {
                  "$ref": "#/definitions/RelationTarget"
                },
                "relationType": {
                  "$ref": "#/definitions/RelationType"
                },
                "relatedType": {
                  "$ref": "#/definitions/ObjectType"
                },
                "relationSubType": {
                  "$ref": "#/definitions/RelationSubType"
                },
                "minItems": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1
                },
                "maxItems": {
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AttributeType": {
      "type": "string",
      "enum": [
        "Integer",
        "Float",
        "String",
        "Boolean",
        "UUID",
        "EnumType"
      ]
    },
    "RelationTarget": {
      "type": "array",
      "items": {
        "type": "string",
        "format": "json-pointer"
      }
    },
    "RelationType": {
      "type": "string",
      "enum": [
        "has",
        "of",
        "to",
        "from",
        "with"
      ]
    },
    "RelationSubType": {
      "type": "string",
      "enum": [
        "primary",
        "secondary",
        "characteristic"
      ]
    },
    "ObjectType": {
      "type": "string",
      "enum": [
        "Equipment",
        "System",
        "Component",
        "Media",
        "Connection"
      ]
    }
  }
}

# JSON schema to conform instances of the Component Obejct Type
  "title": "Example Object Model",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "Component": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "hasMedia": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "json-pointer"
            },
            "relationType": "has",
            "relatedType": "Media",
            "minItems": 1
          },
          "hasPrimaryMedia": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "json-pointer"
            },
            "relationType": "has",
            "relatedType": "Media",
            "relationSubType": "Primary",
            "minItems": 1,
            "maxItems": 1
          },
          "ofEquipment": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "json-pointer"
            },
            "relationType": "of",
            "relatedType": "Equipment",
            "minItems": 1,
            "maxItems": 1
          }
        }
      }
    }
  }
}

# Object instance definition conforming to the instance schema for COmponent Type (Same as the YAML instance definition above)

{
  "Component": {
    "SpinnerMotor": {
      "name": "Spinner Motor",
      "description": "Motor that causes the mirrored sphere to rotate",
      "hasMedia": [
        "#/Media/SpinnerMotorElectricalPower",
        "#/Media/SpinnerMotorTorque"
      ],
      "hasPrimaryMedia": [
        "#/Media/SpinnerMotorTorque"
      ],
      "ofEquipment": [
        "#/Equipment/DiscoBall"
      ]
    },
    "MotorController": {
      "name": "Motor Controller",
      "description": "Modulates the electrical power to control the rotation speed of the motor",
      "hasMedia": [
        "#/Media/ElectricalPowerToSpinnerMotor",
        "#/Media/ControlSignalToMotorController"
      ],
      "hasPrimaryMedia": [
        "#/Media/ElectricalPowerToSpinnerMotor"
      ],
      "ofEquipment": [
        "#/Equipment/DiscoBall"
      ]
    }
  }
}