@startuml

abstract class sdf {
    commonqualities
}

class sdfThing <<sdf>> {
    thingqualities
}

class sdfObject <<sdf>> {
    objectqualities
}

class sdfProperty <<sdf>> {
    propertyqualities
}

class sdfAction <<sdf>> {
    actionqualities
}

class sdfEvent <<sdf>> {
    eventqualities
}

class sdfData <<sdf>> {
    dataqualities
}

class sdfChoice <<sdf>> {
    dataqualities
}

sdf <-left[hidden]- sdfThing

sdf <-- "0+" sdf : hasSdfEntity

sdfThing --> "0+" sdfObject : hasObject
sdfThing <-- "0+" sdfThing : hasThing

sdfObject <-- "0+" sdfObject : hasObject
sdfObject --> "0+" sdfAction : hasAction
sdfObject --> "0+" sdfEvent : hasEvent
sdfObject --> "0+" sdfProperty : hasProperty

sdfAction --> "1+" sdfData : hasInputData
sdfAction --> "0+" sdfData : hasOutputData

sdfEvent --> "1+" sdfData : hasOutputData

sdfProperty --> "1" sdfData : isInstanceOf

sdfChoice -right-> "1" sdfData : isTypeOf
sdfChoice -up-> "1" sdfProperty : isTypeOf

@enduml
