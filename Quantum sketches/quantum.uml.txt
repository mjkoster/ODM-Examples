@startuml
class Equipment {
    EquipmentComponent
}

Equipment::EquipmentComponent "1+" --> EquipmentComponent

class EquipmentComponent {
    Quanta
    ActorType
    Connection
    Behavior
    Property
}
EquipmentComponent::Quanta "1" --> Quanta
EquipmentComponent::ActorType "1" --> ActorType
EquipmentComponent::Connection "1+" --> Connection
EquipmentComponent::Property "0+" --> Property
EquipmentComponent::Behavior "1+" --> Behavior

class Quanta {
    QuantaType
    Media
}

Quanta::QuantaType --> QuantaType
QuantaType ..> QuantaSuperClass: isMemberOf

class Connection {
    ConnectTo
    ConnectVia
    Direction
}

Connection::ConnectTo ..> EquipmentComponent: hasConnectionTo
Connection::ConnectVia ..> EquipmentComponent: hasConnectionVia
Connection::Direction --> Direction

enum Direction {
    Input 
    Output
}

class Property {
    CurrentValue
    ValueType
    SourceQuality
    IsNullvalue
    IsError
    IsComputedBy
    Unit
}

Class Behavior {
    BehaviorType
    Equation
}

enum ValueType {
    Number
    String
    IPaddress
    Enum
}
Property::ValueType --> ValueType

enum QuantaType {
    Liquid
    Gas
    Multiphase
    Conduction
    Convection
    Radiation
    Linear
    Rotation
    Conveyor
    Vehicle
    Electrical
    Steam
    Combustion
    Solar
    Nuclear
    Control
    Data
}

enum QuantaSuperClass {
    Fluid
    Thermal
    Mechanical
    Fuels
    Control
    Data
}

together {

class Media {
    MediaKind
    MediaProperty
    HasMediaFraction
}

Quanta::Media "1" -->  Media

entity MediaKind {
    Water
    Air
    R134a
    NaturalGas
    Ice
    ...
}

entity MediaFraction {
  MediaKind
  Fraction
}

MediaFraction <-- "0+" Media::HasMediaFraction
MediaKind <-- MediaFraction::MediaKind

entity MediaPropertyKind {
    SpecificEnthalpy
    Temperature
    FlowRate
    Pressure
    IPaddress
    BacnetDeviceID
    BacnetObjectID
    BacnetPropertyID
    ...
}
Media::MediaProperty --> MediaPropertyKind: HasProperty
Media::MediaKind --> MediaKind 
Property <.. MediaPropertyKind: isInstanceOf

}

together {

class Unit {
    UnitCategory
    Representation
    EqTranslateToBaseUnit
    EqTranslateFromBaseUnit
}
Property::Unit --> Unit

class UnitCategory {
    BaseUnit
    UnitCategory
}

entity  UnitKind {
    SI_Enthalpy_Unit
    SI_Temperature_Unit
    ...
}
Unit <.. UnitKind: IsInstanceOf

enum UnitCategoryKind {
    EnthalpyUnit
    PressureUnit
    TemperatureUnit
    ...
}
Unit::UnitCategory --> UnitCategory
UnitCategory::UnitCategory --> UnitCategoryKind
UnitKind --> "1" UnitCategory::BaseUnit

}

class Equation {
    Function
    Notes
}
Property::IsComputedBy --> Equation
Unit::EqTranslateToBaseUnit --> Equation 
Unit::EqTranslateFromBaseUnit --> Equation 
Behavior::Equation --> Equation

enum BehaviorType {
    booleanLogic
    protocolMap
}
Behavior::BehaviorType --> BehaviorType

enum ActorType {
    Producer
    Consumer
    Transformer
    Transport
    Store
    Router
    Mixer
    Branch
    Path
}

entity QuantaSuperClassConformance {
    isEnergy
    isMaterial
    isInformation
}
QuantaSuperClass ..> QuantaSuperClassConformance: hasConformance
MediaKind ..> QuantaSuperClassConformance: hasConformance
@enduml