{
  "title": "SDF Schema",
  "description": "JSON Schema for validating SDF instances against the SDF model.",
  "$schema ": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "info": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "license": {
          "type": "string"
        }
      },
      "required": []
    },
    "namespace": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "defaultnamespace": {
      "type": "string"
    },
    "odmThing": {
      "description": "Thing is a composition of objects that work together in some way",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/thingqualities"
      }
    },
    "odmProduct": {
      "description": "Product is a composition of things and objects that can model a SKU-level instance of a product",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/productqualities"
      }
    },
    "odmView": {
      "description": "odmView uses include to define a list of instances in the deployed model to include by reference",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/viewqualities"
     }
    },
    "odmObject": {
      "description": "Object is a set of Properties, Actions, and Events that together perform a particular function",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/objectqualities"
      }
    },
    "odmProperty": {
      "description": "Property represents the state of an instance of an object",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/propertyqualities"
      }
    },
    "odmAction": {
      "description": "Action is a directive to invoke an application layer verb associated with an object",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/actionqualities"
      }
    },
    "odmEvent": {
      "description": "Event represents an occurence of something associated with an object",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/eventqualities"
      }
    },
    "odmData": {
      "description": "Data represents a piece of information that can be the state of a property or a parameter to an action or a signal in an event",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/dataqualities"
      }
    }
  },
  "definitions": {
    "commonqualities": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "odmType": {
          "type": "object",
          "properties": {
            "$ref": {
              "type": "string"
            }            
          }
        },
        "include": {
          "type": "array",
          "items": {
            "description": "set of pointers to definitions to be included as instances",
            "type": "object",
            "properties": {
              "$ref": {
                  "type": "string"
              }            
            }
          },
          "minitems": 1
        },
        "optional": {
          "type": "boolean"
        }
      }
    },

    "thingqualities": {
      "allOf": [
        {
          "$ref": "#/definitions/commonqualities"
        },
        {
          "type": "object",
          "properties": {
            "odmObject": {"$ref": "#/properties/odmObject"},
            "odmThing": {"$ref": "#/properties/odmThing"},
            "odmView": {"$ref": "#/properties/odmView"}
          }
        }
      ]
    },

    "productqualities": {
      "allOf": [
        {
          "$ref": "#/definitions/commonqualities"
        },
        {
          "type": "object",
          "properties": {
            "odmObject": {"$ref": "#/properties/odmObject"},
            "odmThing": {"$ref": "#/properties/odmThing"},
            "odmView": {"$ref": "#/properties/odmView"}
          }
        }
      ]
    },

    "viewqualities": {
      "allOf": [
        {
          "$ref": "#/definitions/commonqualities"
        },
        {
          "type": "object",
          "properties": {
            "isDefaultView": {
              "type": "boolean"
            }
          }
        }
      ]
    },

    "objectqualities": {
      "allOf": [
        {
          "$ref": "#/definitions/commonqualities"
        },
        {
          "type": "object",
          "properties": {
            "odmProperty": {"$ref": "#/properties/odmProperty"},
            "odmAction": {"$ref": "#/properties/odmAction"},
            "odmEvent": {"$ref": "#/properties/odmEvent"},
            "odmData": {"$ref": "#/properties/odmData"}
          }
        }
      ]
    },

    "propertyqualities": {
      "allOf": [
        {
          "$ref": "#/definitions/dataqualities"
        }
      ]
    },

    "actionqualities": {
      "$ref": "#/definitions/commonqualities"
    },

    "eventqualities": {
      "$ref": "#/definitions/commonqualities"
    },

    "dataqualities": {
      "allOf": [
        {
          "$ref":"#/definitions/commonqualities"
        },
        {
          "$ref":"#/definitions/jsonschema"
        },
        {
          "type": "object",
          "properties": {
            "units": {
              "type": "string"
            },
            "scaleMinimum": {
              "type": "number"
            },
            "scaleMaximum": {
              "type": "number"
            },
            "observable": {
              "type": "boolean"
            },
            "nullable": {
              "type": "boolean"
            },
            "widthInBits": {
              "type": "number"
            },
            "contentFormat": {
              "type": "string"
            }
          }
        }
      ]
    },

    "jsonschema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "number",
            "string",
            "boolean",
            "integer",
            "array",
            "object"
          ]
        },
        "enum": {
          "type": "array"
        },
        "const": {
          "oneOf": [
            { "type": "number"},
            { "type": "string"},
            { "type": "boolean"},
            { "type": "array"},
            { "type": "object"},
            { "type": "null"}
          ]
        },
        "default": {
          "oneOf": [
            { "type": "number"},
            { "type": "string"},
            { "type": "boolean"},
            { "type": "array"},
            { "type": "object"},
            { "type": "null"}
          ]
        },
        "pattern": {
          "type": "string"
        },
        "minimum": {
          "type": "number"
        },
        "maximum": {
          "type": "number"
        },
        "multipleOf": {
          "type": "number"
        },
        "maxLength": {
          "type": "number"
        },
        "minLength": {
          "type": "number"
        },
        "oneOf": {
          "type": "array",
          "minItems": 1
        },
        "anyOf": {
          "type": "array",
          "minItems": 1
        },
        "allOf": {
          "type": "array",
          "minItems": 1
        },
        "items": {
          "oneOf": [
            {
              "type": "array"
            },
            {
              "type": "object"
            }
          ]
        },
        "contains": {
          "oneOf": [
            {
              "type": "array"
            },
            {
              "type": "object"
            }
          ]
        },
        "minItems": {
          "type": "number"
        },
        "maxItems": {
          "type": "number"
        },
        "properties": {
          "type": "object"
        },
        "readOnly": {
          "type": "boolean"
        },
        "writeOnly": {
          "type": "boolean"
        }
      }
    }
  }
}
